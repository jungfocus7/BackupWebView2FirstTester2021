const IsNumber=t=>'number'==typeof t,NotNumber=t=>'number'!=typeof t,IsFloat=t=>t%1!=0,IsMinus=t=>t<0,Random=t=>Math.round(Math.random()*(t-1)),RandRange=(t,r)=>t+Math.round(Math.random()*(r-t)),IsOdd=t=>t%2>0,IsEven=t=>t%2==0;export const hfnum=Object.seal({IsNumber:IsNumber,NotNumber:NotNumber,IsFloat:IsFloat,IsMinus:IsMinus,Random:Random,RandRange:RandRange,IsOdd:IsOdd,IsEven:IsEven});const IsStr=t=>'string'==typeof t&&''!==t.trim(),GetLastNum=(t,r='_')=>{const n=t.lastIndexOf(r)+1;return~~t.substring(n)},Str2Ab=t=>{const r=t.length;let n=new Uint16Array(new ArrayBuffer(2*r));for(let e=0;e<r;e++)n[e]=t.charCodeAt(e);return n},Ab2Str=t=>String.fromCharCode.apply(null,t);export const hfstr=Object.seal({IsStr:IsStr,GetLastNum:GetLastNum,Str2Ab:Str2Ab,Ab2Str:Ab2Str});const IsArr=t=>Array.isArray(t)&&t.length>0,IsContains=(t,r)=>{if(!1===IsArr(t))return!1;let n=!1;const e=t.length;for(let s=0;s<e;s++)if(t[s]===r){n=!0;break}return n},Shuffle=t=>{if(!1===IsArr(t))return;const r=t.length;for(let n=0;n<r;n++){let e=t[n],s=hfnum.RandRange(0,r-1);t[n]=t[s],t[s]=e}},Copy=t=>!1===IsArr(t)?null:t.slice();export const hfarr=Object.seal({IsArr:IsArr,IsContains:IsContains,Shuffle:Shuffle,Copy:Copy});