export const hfnum=Object.seal({IsNumber:t=>'number'==typeof t,NotNumber:t=>'number'!=typeof t,IsFloat:t=>t%1!=0,IsMinus:t=>t<0,Random:t=>Math.round(Math.random()*(t-1)),RandRange:(t,r)=>t+Math.round(Math.random()*(r-t)),IsOdd:t=>t%2>0,IsEven:t=>t%2==0});export const hfstr=Object.seal({IsStr:t=>'string'==typeof t&&''!==t.trim(),GetLastNum:(t,r='_')=>{const e=t.lastIndexOf(r)+1;return~~t.substring(e)},Str2Ab:t=>{const r=t.length;let e=new Uint16Array(new ArrayBuffer(2*r));for(let n=0;n<r;n++)e[n]=t.charCodeAt(n);return e},Ab2Str:t=>String.fromCharCode.apply(null,t)});export const hfarr=Object.seal({NotEmpty:t=>Array.isArray(t)&&t.length>0,IsContains:(t,r)=>{if(!1===hfarr.NotEmpty(t))return!1;let e=!1;const n=t.length;for(let a=0;a<n;a++)if(t[a]===r){e=!0;break}return e},Shuffle:t=>{if(!1===hfarr.NotEmpty(t))return;const r=t.length;for(let e=0;e<r;e++){let n=t[e],a=hfnum.RandRange(0,r-1);t[e]=t[a],t[a]=n}},Copy:t=>!1===hfarr.NotEmpty(t)?null:t.slice()});export const hfdtime=Object.seal({TimeStamp:t=>`${t.getFullYear().toString().substring(2)}/${(t.getMonth()+1).toString().padStart(2,'0')}/${t.getDate().toString().padStart(2,'0')} ${t.getHours().toString().padStart(2,'0')}:${t.getMinutes().toString().padStart(2,'0')}:${t.getSeconds().toString().padStart(2,'0')}.${t.getMilliseconds().toString().padStart(3,'0')}`});